project(text-freetype2)

option(ENABLE_FREETYPE "Enable FreeType text plugin" ON)

if(NOT ENABLE_FREETYPE)
  obs_status(DISABLED "text-freetype2")
  return()
endif()

find_package(Freetype REQUIRED)

add_library(text-freetype2 MODULE)
add_library(OBS::text-freetype2 ALIAS text-freetype2)

find_package(libobs REQUIRED)
target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE OBS::libobs)

option(ENABLE_FRONTEND_API "Use obs-frontend-api for UI functionality" ON)
option(ENABLE_QT "Use Qt functionality" ON)

if(ENABLE_FRONTEND_API)
  find_package(obs-frontend-api REQUIRED)
  target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE OBS::obs-frontend-api)
endif()

if(ENABLE_QT)
  find_qt(COMPONENTS Widgets Core)
  target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE Qt::Core Qt::Widgets)
  target_compile_options(
    ${CMAKE_PROJECT_NAME} PRIVATE $<$<C_COMPILER_ID:Clang,AppleClang>:-Wno-quoted-include-in-framework-header
                                  -Wno-comma>)
  set_target_properties(
    ${CMAKE_PROJECT_NAME}
    PROPERTIES AUTOMOC ON
               AUTOUIC_SEARCH_PATHS forms
               AUTOUIC ON
               AUTORCC ON)
endif()

target_sources(text-freetype2 PRIVATE "src/find-font.h" "src/obs-convenience.c" "src/text-functionality.c" "src/text-freetype2.c"
                                      "src/obs-convenience.h" "src/text-freetype2.h")

target_link_libraries(text-freetype2 PRIVATE OBS::libobs Freetype::Freetype)

set_target_properties(text-freetype2 PROPERTIES FOLDER "plugins" PREFIX "")

if(OS_WINDOWS)
  set(MODULE_DESCRIPTION "OBS FreeType text module")

  target_sources(text-freetype2 PRIVATE "src/find-font.c" "src/find-font-windows.c" "src/text-freetype2.rc")
  target_link_options(text-freetype2 PRIVATE "LINKER:/IGNORE:4098" "LINKER:/IGNORE:4099")

elseif(OS_MACOS)
  find_package(Iconv REQUIRED)
  find_library(COCOA Cocoa)
  mark_as_advanced(COCOA)

  target_sources(text-freetype2 PRIVATE "src/find-font.c" "src/find-font-cocoa.m" "src/find-font-iconv.c")

  target_link_libraries(text-freetype2 PRIVATE Iconv::Iconv ${COCOA})

elseif(OS_POSIX)
  find_package(Fontconfig REQUIRED)

#  target_sources(text-freetype2 PRIVATE "src/find-font-unix.c")

  target_link_libraries(text-freetype2 PRIVATE Fontconfig::Fontconfig)
endif()

setup_plugin_target(text-freetype2)
